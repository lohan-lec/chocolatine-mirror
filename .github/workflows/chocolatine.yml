name : Chocolatine

env:
  MIRROR_URL: ${{ secrets.MIRROR_URL }}
  EXECUTABLES: ${{ secrets.EXECUTABLES }}


on:
  push:
    branches-ignore: [ga-ignore-*]
  pull_request:
    branches-ignore: [ga-ignore-*]

jobs:
  check_mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Check if mirror
        run: |
          if [ "${{ github.event.repository.clone_url }}" = "${{ env.MIRROR_URL }}" ]; then
            echo "This is a mirror repository, skipping workflow"
            exit 1
          fi

  check_coding_style:
    needs: check_mirror
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run coding style
        run: |
          check.sh $(pwd) $(pwd)
          if [ -s "coding-style-reports.log" ]; then
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_num=$(echo "$line" | cut -d: -f2)
              error=$(echo "$line" | cut -d: -f3-)
              echo "::error file=$file,line=$line_num::$error"
            done < coding-style-reports.log
            exit 1
          fi
  
  check_program_compilation:
    needs: check_mirror
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: make
        run: |
          make
        timeout-minutes: 2
        
      - name: make_clean
        run: |
          make clean
        
      - name: Check executables
        shell: bash
        run: |
          IFS=',' read -ra exec_array <<< "$EXECUTABLES"
          for exec in "${exec_array[@]}"; do
            if [ ! -x "$exec" ]; then
              echo "Error: '$exec' not found or not executable"
              exit 1
            fi
            echo "Executable '$exec' found and is executable"
          done

  run_tests:
    needs: check_mirror
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: make_tests_run
        run: |
          make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: check_mirror
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
          ssh_username: git